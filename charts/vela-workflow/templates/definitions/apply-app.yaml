# Code generated by KubeVela templates. DO NOT EDIT. Please edit the original cue file.
# Definition source cue file: vela-templates/definitions/internal/apply-app.cue
apiVersion: core.oam.dev/v1beta1
kind: WorkflowStepDefinition
metadata:
  annotations:
    definition.oam.dev/alias: ""
    definition.oam.dev/description: Apply application from data or ref to the cluster
    definition.oam.dev/example-url: https://raw.githubusercontent.com/kubevela/workflow/main/examples/workflow-run/apply-applications.yaml
  labels:
    custom.definition.oam.dev/scope: WorkflowRun
  name: apply-app
  namespace: {{ include "systemDefinitionNamespace" . }}
spec:
  schematic:
    cue:
      template: |
        import (
        	"vela/op"
        	"encoding/yaml"
        )

        app: op.#Steps & {
        	if parameter.data != _|_ {
        		apply: op.#Apply & {
        			value: parameter.data
        		}
        	}
        	if parameter.ref != _|_ {
        		if parameter.ref.type == "configMap" {
        			cm: op.#Read & {
        				value: {
        					apiVersion: "v1"
        					kind:       "ConfigMap"
        					metadata: {
        						name:      parameter.ref.name
        						namespace: parameter.ref.namespace
        					}
        				}
        			}
        			template: cm.value.data[parameter.ref.key]
        			apply:    op.#Apply & {
        				value: yaml.Unmarshal(template)
        			}
        		}
        	}
        }
        wait: op.#ConditionalWait & {
        	continue: app.apply.value.status.status == "running"
        }
        parameter: close({
        	data?: {...}
        }) | close({
        	ref?: {
        		name:      string
        		namespace: *context.namespace | string
        		type:      *"configMap" | string
        		key:       *"application" | string
        	}
        })

