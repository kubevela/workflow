
apiVersion: core.oam.dev/v1beta1
kind: WorkflowStepDefinition
metadata:
  name: suspend-and-deploy
  namespace: vela-system
spec:
  schematic:
    cue:
      template: |
        import (
        	"vela/kube"
        	"vela/op"
        )

        suspend: op.#Suspend & {duration: "1s"}
        output: kube.#Apply & {
        	$params: {
        		cluster: parameter.cluster
        		value: {
        			apiVersion: "apps/v1"
        			kind:       "Deployment"
        			metadata: {
        				name:      context.stepName
        				namespace: context.namespace
        			}
        			spec: {
        				selector: matchLabels: "workflow.oam.dev/step-name": "\(context.name)-\(context.stepName)"
        				replicas: parameter.replicas
        				template: {
        					metadata: labels: "workflow.oam.dev/step-name": "\(context.name)-\(context.stepName)"
        					spec: containers: [{
        						name:  context.stepName
        						image: parameter.image
        						if parameter["cmd"] != _|_ {
        							command: parameter.cmd
        						}
        					}]
        				}
        			}
        		}
        	}
        }
        wait: op.#ConditionalWait & {
        	continue: output.$returns.value.status.readyReplicas == parameter.replicas
        }
        parameter: {
        	image:    string
        	replicas: *1 | int
        	cluster:  *"" | string
        	cmd?: [...string]
        }
